{
  "version": 3,
  "sources": ["../../../../../apps/library_management/node_modules/party-js/lib/settings.js", "../../../../../apps/library_management/node_modules/party-js/lib/util/config.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/circle.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/math.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/color.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/spline.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/gradient.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/numericSpline.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/rect.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/vector.js", "../../../../../apps/library_management/node_modules/party-js/lib/components/index.js", "../../../../../apps/library_management/node_modules/party-js/lib/util/rotation.js", "../../../../../apps/library_management/node_modules/party-js/lib/util/rules.js", "../../../../../apps/library_management/node_modules/party-js/lib/util/lazy.js", "../../../../../apps/library_management/node_modules/party-js/lib/util/index.js", "../../../../../apps/library_management/node_modules/party-js/lib/containers.js", "../../../../../apps/library_management/node_modules/party-js/lib/debug.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/random.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/variation.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/options/emitterOptions.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/sources.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/options/emissionOptions.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/options/renderOptions.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/options/index.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/particle.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/emitter.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/shapes.js", "../../../../../apps/library_management/node_modules/party-js/lib/particles/renderer.js", "../../../../../apps/library_management/node_modules/party-js/lib/scene.js", "../../../../../apps/library_management/node_modules/party-js/lib/systems/modules.js", "../../../../../apps/library_management/node_modules/party-js/lib/templates/confetti.js", "../../../../../apps/library_management/node_modules/party-js/lib/templates/sparkles.js", "../../../../../apps/library_management/node_modules/party-js/lib/templates/index.js", "../../../../../apps/library_management/node_modules/party-js/lib/index.js", "../../../../../apps/library_management/library_management/public/js/party.bundle.js"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.settings = void 0;\r\nexports.settings = {\r\n    debug: false,\r\n    gravity: 800,\r\n    zIndex: 99999,\r\n    respectReducedMotion: true,\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.overrideDefaults = void 0;\r\n/**\r\n * Replaces the supplied defaults with the properties specified in the overrides.\r\n * This returns a new object.\r\n */\r\nfunction overrideDefaults(defaults, overrides) {\r\n    return Object.assign({}, defaults, overrides);\r\n}\r\nexports.overrideDefaults = overrideDefaults;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\n/**\r\n * Represents a circle.\r\n */\r\nvar Circle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new circle at the specified coordinates, with a default radius of 0.\r\n     */\r\n    function Circle(x, y, radius) {\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    Circle.zero = new Circle(0, 0);\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Spline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a spline that can be used to continueously evaluate a function\r\n * between keys. The base implementation is kept generic, so the functionality\r\n * can easily be implemented for similar constructs, such as gradients.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    /**\r\n     * Creates a new spline instance, using the specified keys.\r\n     * Note that you have to pass at least one key.\r\n     */\r\n    function Spline() {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        if (keys.length === 0) {\r\n            throw new Error(\"Splines require at least one key.\");\r\n        }\r\n        if (Array.isArray(keys[0])) {\r\n            throw new Error(\"You are trying to pass an array to the spline constructor, which is not supported. \" +\r\n                \"Try to spread the array into the constructor instead.\");\r\n        }\r\n        this.keys = keys;\r\n    }\r\n    /**\r\n     * Evaluates the spline at the given time.\r\n     */\r\n    Spline.prototype.evaluate = function (time) {\r\n        if (this.keys.length === 0) {\r\n            throw new Error(\"Attempt to evaluate a spline with no keys.\");\r\n        }\r\n        if (this.keys.length === 1) {\r\n            // The spline only contains one key, therefore is constant.\r\n            return this.keys[0].value;\r\n        }\r\n        // Sort the keys and figure out the first key above the passed time.\r\n        var ascendingKeys = this.keys.sort(function (a, b) { return a.time - b.time; });\r\n        var upperKeyIndex = ascendingKeys.findIndex(function (g) { return g.time > time; });\r\n        // If the found index is either 0 or -1, the specified time falls out\r\n        // of the range of the supplied keys. In that case, the value of the\r\n        // nearest applicant key is returned.\r\n        if (upperKeyIndex === 0) {\r\n            return ascendingKeys[0].value;\r\n        }\r\n        if (upperKeyIndex === -1) {\r\n            return ascendingKeys[ascendingKeys.length - 1].value;\r\n        }\r\n        // Otherwise, find the bounding keys, and extrapolate the time between\r\n        // the two. This is then used to interpolate between the two keys,\r\n        // using the provided implementation.\r\n        var lowerKey = ascendingKeys[upperKeyIndex - 1];\r\n        var upperKey = ascendingKeys[upperKeyIndex];\r\n        var containedTime = math_1.invlerp(lowerKey.time, upperKey.time, time);\r\n        return this.interpolate(lowerKey.value, upperKey.value, containedTime);\r\n    };\r\n    return Spline;\r\n}());\r\nexports.Spline = Spline;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gradient = void 0;\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a gradient that can be used to interpolate between multiple color.\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Interpolates between two color on the gradient.\r\n     */\r\n    Gradient.prototype.interpolate = function (a, b, t) {\r\n        return a.mix(b, t);\r\n    };\r\n    /**\r\n     * Returns a solid gradient from the given color.\r\n     */\r\n    Gradient.solid = function (color) {\r\n        return new Gradient({ value: color, time: 0.5 });\r\n    };\r\n    /**\r\n     * Returns a gradient with evenly spaced keys from the given colors.\r\n     */\r\n    Gradient.simple = function () {\r\n        var colors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            colors[_i] = arguments[_i];\r\n        }\r\n        var step = 1 / (colors.length - 1);\r\n        return new (Gradient.bind.apply(Gradient, __spreadArray([void 0], colors.map(function (color, index) { return ({\r\n            value: color,\r\n            time: index * step,\r\n        }); }))))();\r\n    };\r\n    return Gradient;\r\n}(spline_1.Spline));\r\nexports.Gradient = Gradient;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumericSpline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a spline that can take numeric values.\r\n */\r\nvar NumericSpline = /** @class */ (function (_super) {\r\n    __extends(NumericSpline, _super);\r\n    function NumericSpline() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Smoothly interpolates between two keys on the spline.\r\n     */\r\n    NumericSpline.prototype.interpolate = function (a, b, t) {\r\n        return math_1.slerp(a, b, t);\r\n    };\r\n    return NumericSpline;\r\n}(spline_1.Spline));\r\nexports.NumericSpline = NumericSpline;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\n/**\r\n * Represents a rectangle with an origin and size.\r\n */\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a new document-space rectangle from the viewport's bounds.\r\n     */\r\n    Rect.fromScreen = function () {\r\n        return new Rect(window.scrollX, window.scrollY, window.innerWidth, window.innerHeight);\r\n    };\r\n    /**\r\n     * Returns a new document-space rectangle from the specified element.\r\n     */\r\n    Rect.fromElement = function (element) {\r\n        var r = element.getBoundingClientRect();\r\n        return new Rect(window.scrollX + r.x, window.scrollY + r.y, r.width, r.height);\r\n    };\r\n    Rect.zero = new Rect(0, 0);\r\n    return Rect;\r\n}());\r\nexports.Rect = Rect;\r\n", "\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./circle\"), exports);\r\n__exportStar(require(\"./color\"), exports);\r\n__exportStar(require(\"./gradient\"), exports);\r\n__exportStar(require(\"./numericSpline\"), exports);\r\n__exportStar(require(\"./rect\"), exports);\r\n__exportStar(require(\"./vector\"), exports);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rotationToNormal = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Converts the specified euler rotation (in degrees) into the corresponding normal vector.\r\n *\r\n * @remarks\r\n * The normal is calculated by placing a (figurative) plane in a coordinate-system's\r\n * origin, and rotating it by the specified angles. Note that the z-component of the\r\n * rotation is irrelevant for the normal and can be ignored. Then, two vectors\r\n * describing the orientation of the plane are calculated. Their cross product\r\n * denotes the normal vector.\r\n *\r\n * @param rotation The euler rotation angles (in degrees) to calculate the normal for.\r\n */\r\nfunction rotationToNormal(rotation) {\r\n    var alpha = rotation.x * math_1.deg2rad;\r\n    var beta = rotation.y * math_1.deg2rad;\r\n    var a = new components_1.Vector(Math.cos(beta), 0, Math.sin(beta));\r\n    var b = new components_1.Vector(0, Math.cos(alpha), Math.sin(alpha));\r\n    return a.cross(b);\r\n}\r\nexports.rotationToNormal = rotationToNormal;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.despawningRules = void 0;\r\n/**\r\n * Contains a set of pre-defined particle despawning rules.\r\n */\r\nexports.despawningRules = {\r\n    /**\r\n     * A rule that despawns a particle once its lifetime is over.\r\n     */\r\n    lifetime: function (particle) {\r\n        return particle.lifetime <= 0;\r\n    },\r\n    /**\r\n     * A rule that despawns a particle once its y-coordinate is outside of the document.\r\n     */\r\n    bounds: function (particle) {\r\n        // Get document height: https://stackoverflow.com/a/44077777/5507624\r\n        var height = document.documentElement.scrollHeight;\r\n        return particle.location.y > height;\r\n    },\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./config\"), exports);\r\n__exportStar(require(\"./rotation\"), exports);\r\n__exportStar(require(\"./rules\"), exports);\r\n__exportStar(require(\"./lazy\"), exports);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\r\nvar settings_1 = require(\"./settings\");\r\nvar util_1 = require(\"./util\");\r\n/**\r\n * The prefix to apply to the containers.\r\n */\r\nvar containerPrefix = \"party-js-\";\r\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\r\nfunction isContainerActive(container) {\r\n    return container && container.isConnected;\r\n}\r\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\r\nfunction makeContainer(name, styles, parent) {\r\n    var container = document.createElement(\"div\");\r\n    container.id = containerPrefix + name;\r\n    Object.assign(container.style, styles);\r\n    return parent.appendChild(container);\r\n}\r\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\r\nexports.rootContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"container\", {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        pointerEvents: \"none\",\r\n        userSelect: \"none\",\r\n        zIndex: settings_1.settings.zIndex.toString(),\r\n    }, document.body);\r\n}, isContainerActive);\r\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\r\nexports.debugContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"debug\", {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"0.5em\",\r\n        padding: \"0.5em 1em\",\r\n        border: \"2px solid rgb(0, 0, 0, 0.2)\",\r\n        background: \"rgb(0, 0, 0, 0.1)\",\r\n        color: \"#555\",\r\n        fontFamily: \"monospace\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\r\nexports.particleContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"particles\", {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        perspective: \"1200px\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n", "\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Debug = void 0;\r\nvar containers_1 = require(\"./containers\");\r\nvar settings_1 = require(\"./settings\");\r\n/**\r\n * Represents a utility module to view debug information inside the DOM.\r\n * This is disabled by default and needs to manually be enabled by setting\r\n * the '.enabled' field to true.\r\n *\r\n * While disabled, the utility will not fetch stats and update itself.\r\n */\r\nvar Debug = /** @class */ (function () {\r\n    /**\r\n     * Registers a new debug utility that is attached to the given scene.\r\n     *\r\n     * @param scene The scene to attach to.\r\n     */\r\n    function Debug(scene) {\r\n        this.scene = scene;\r\n        /**\r\n         * The rate at which the debug interface should refresh itself (per second).\r\n         */\r\n        this.refreshRate = 8;\r\n        /**\r\n         * The timer counting down to refreshes.\r\n         */\r\n        this.refreshTimer = 1 / this.refreshRate;\r\n    }\r\n    /**\r\n     * Processes a tick event in the interface. This checks if enough has passed to\r\n     * trigger a refresh, and if so, fetches the debug information and updates the DOM.\r\n     *\r\n     * @param delta The time that has elapsed since the last tick.\r\n     */\r\n    Debug.prototype.tick = function (delta) {\r\n        var container = containers_1.debugContainer.current;\r\n        // If the current display style does not match the style inferred from the\r\n        // enabled-state, update it.\r\n        var displayStyle = settings_1.settings.debug ? \"block\" : \"none\";\r\n        if (container.style.display !== displayStyle) {\r\n            container.style.display = displayStyle;\r\n        }\r\n        if (!settings_1.settings.debug) {\r\n            // If the interface is not enabled, don't fetch or update any infos.\r\n            return;\r\n        }\r\n        this.refreshTimer += delta;\r\n        if (this.refreshTimer > 1 / this.refreshRate) {\r\n            this.refreshTimer = 0;\r\n            // Update the container with the fetched information joined on line breaks.\r\n            container.innerHTML = this.getDebugInformation(delta).join(\"<br>\");\r\n        }\r\n    };\r\n    /**\r\n     * Fetches the debug information from the specified delta and the linked scene.\r\n     *\r\n     * @returns An array of debugging information, formatted as HTML.\r\n     */\r\n    Debug.prototype.getDebugInformation = function (delta) {\r\n        // Count emitters and particles.\r\n        var emitters = this.scene.emitters.length;\r\n        var particles = this.scene.emitters.reduce(function (acc, cur) { return acc + cur.particles.length; }, 0);\r\n        var infos = [\r\n            \"<b>party.js Debug</b>\",\r\n            \"--------------\",\r\n            \"FPS: \" + Math.round(1 / delta),\r\n            \"Emitters: \" + emitters,\r\n            \"Particles: \" + particles,\r\n        ];\r\n        // Emitter informations are formatted using their index, internal timer\r\n        // and total particle count.\r\n        var emitterInfos = this.scene.emitters.map(function (emitter) {\r\n            return [\r\n                // Show the current loop and the total loops.\r\n                \"\\u2B6F: \" + (emitter[\"currentLoop\"] + 1) + \"/\" + (emitter.options.loops >= 0 ? emitter.options.loops : \"\u221E\"),\r\n                // Show the amount of particle contained.\r\n                \"\\u03A3p: \" + emitter.particles.length,\r\n                // Show the internal timer.\r\n                !emitter.isExpired\r\n                    ? \"\\u03A3t: \" + emitter[\"durationTimer\"].toFixed(3) + \"s\"\r\n                    : \"<i>expired</i>\",\r\n            ].join(\", \");\r\n        });\r\n        infos.push.apply(infos, __spreadArray([\"--------------\"], emitterInfos));\r\n        return infos;\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomInsideCircle = exports.randomInsideRect = exports.randomUnitVector = exports.pick = exports.randomRange = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"./math\");\r\n/**\r\n * Returns a random value from min to max.\r\n */\r\nfunction randomRange(min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return math_1.lerp(min, max, Math.random());\r\n}\r\nexports.randomRange = randomRange;\r\n/**\r\n * Picks a random element from the specified array. Returns undefined if the array is empty.\r\n */\r\nfunction pick(arr) {\r\n    return arr.length === 0\r\n        ? undefined\r\n        : arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nexports.pick = pick;\r\n/**\r\n * Returns a random unit vector.\r\n */\r\nfunction randomUnitVector() {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var z = randomRange(-1, 1);\r\n    return new components_1.Vector(Math.sqrt(1 - z * z) * Math.cos(theta), Math.sqrt(1 - z * z) * Math.sin(theta), z);\r\n}\r\nexports.randomUnitVector = randomUnitVector;\r\n/**\r\n * Returns a random point inside the given rect.\r\n */\r\nfunction randomInsideRect(rect) {\r\n    return new components_1.Vector(rect.x + randomRange(0, rect.width), rect.y + randomRange(0, rect.height));\r\n}\r\nexports.randomInsideRect = randomInsideRect;\r\nfunction randomInsideCircle(circle) {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var radius = randomRange(0, circle.radius);\r\n    return new components_1.Vector(circle.x + Math.cos(theta) * radius, circle.y + Math.sin(theta) * radius);\r\n}\r\nexports.randomInsideCircle = randomInsideCircle;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Returns a value instance of a variation.\r\n */\r\nfunction evaluateVariation(variation) {\r\n    if (Array.isArray(variation))\r\n        return random_1.pick(variation);\r\n    if (typeof variation === \"function\")\r\n        return variation();\r\n    return variation;\r\n}\r\nexports.evaluateVariation = evaluateVariation;\r\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\r\nfunction range(min, max) {\r\n    return function () { return random_1.randomRange(min, max); };\r\n}\r\nexports.range = range;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\r\nfunction skew(value, amount) {\r\n    return function () { return value + random_1.randomRange(-amount, amount); };\r\n}\r\nexports.skew = skew;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\r\nfunction skewRelative(value, percentage) {\r\n    return function () { return value * (1 + random_1.randomRange(-percentage, percentage)); };\r\n}\r\nexports.skewRelative = skewRelative;\r\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\r\nfunction splineSample(spline) {\r\n    return function () { return spline.evaluate(Math.random()); };\r\n}\r\nexports.splineSample = splineSample;\r\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\r\nfunction gradientSample(gradient) {\r\n    return splineSample(gradient);\r\n}\r\nexports.gradientSample = gradientSample;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmitterOptions = void 0;\r\nvar rules_1 = require(\"../../util/rules\");\r\n/**\r\n * Returns the default set of emitter options.\r\n */\r\nfunction getDefaultEmitterOptions() {\r\n    return {\r\n        duration: 5,\r\n        loops: 1,\r\n        useGravity: true,\r\n        maxParticles: 300,\r\n        despawningRules: [rules_1.despawningRules.lifetime, rules_1.despawningRules.bounds],\r\n        modules: [],\r\n    };\r\n}\r\nexports.getDefaultEmitterOptions = getDefaultEmitterOptions;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmissionOptions = void 0;\r\nvar components_1 = require(\"../../components\");\r\nvar sources_1 = require(\"../../systems/sources\");\r\n/**\r\n * Returns the default set of emission options.\r\n */\r\nfunction getDefaultEmissionOptions() {\r\n    return {\r\n        rate: 10,\r\n        angle: 0,\r\n        bursts: [],\r\n        sourceSampler: sources_1.rectSource(components_1.Rect.zero),\r\n        initialLifetime: 5,\r\n        initialSpeed: 5,\r\n        initialSize: 1,\r\n        initialRotation: components_1.Vector.zero,\r\n        initialColor: components_1.Color.white,\r\n    };\r\n}\r\nexports.getDefaultEmissionOptions = getDefaultEmissionOptions;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRendererOptions = void 0;\r\n/**\r\n * Returns the default set of renderer options.\r\n */\r\nfunction getDefaultRendererOptions() {\r\n    return {\r\n        shapeFactory: \"square\",\r\n        applyColor: defaultApplyColor,\r\n        applyOpacity: defaultApplyOpacity,\r\n        applyLighting: defaultApplyLighting,\r\n        applyTransform: defaultApplyTransform,\r\n    };\r\n}\r\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\r\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\r\nfunction defaultApplyColor(color, element) {\r\n    var hex = color.toHex();\r\n    // Note that by default, HTML node names are uppercase.\r\n    switch (element.nodeName.toLowerCase()) {\r\n        case \"div\":\r\n            element.style.background = hex;\r\n            break;\r\n        case \"svg\":\r\n            element.style.fill = element.style.color = hex;\r\n            break;\r\n        default:\r\n            element.style.color = hex;\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Applies the specified opacity to the element.\r\n */\r\nfunction defaultApplyOpacity(opacity, element) {\r\n    element.style.opacity = opacity.toString();\r\n}\r\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\r\nfunction defaultApplyLighting(lighting, element) {\r\n    element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\r\n}\r\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\r\nfunction defaultApplyTransform(particle, element) {\r\n    element.style.transform =\r\n        // Make sure to take window scrolling into account.\r\n        \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" +\r\n            (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") +\r\n            (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") +\r\n            (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") +\r\n            (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") +\r\n            (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") +\r\n            (\"scale(\" + particle.size.toFixed(3) + \")\");\r\n}\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./emitterOptions\"), exports);\r\n__exportStar(require(\"./emissionOptions\"), exports);\r\n__exportStar(require(\"./renderOptions\"), exports);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particle = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar config_1 = require(\"../util/config\");\r\n/**\r\n * Represents an emitted particle.\r\n */\r\nvar Particle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new particle instance through the specified options.\r\n     */\r\n    function Particle(options) {\r\n        var populatedOptions = config_1.overrideDefaults({\r\n            lifetime: 0,\r\n            size: 1,\r\n            location: components_1.Vector.zero,\r\n            rotation: components_1.Vector.zero,\r\n            velocity: components_1.Vector.zero,\r\n            color: components_1.Color.white,\r\n            opacity: 1,\r\n        }, options);\r\n        // Generate a symbolic ID.\r\n        this.id = Symbol();\r\n        // Assign various properties, together with some initials for later reference.\r\n        this.size = this.initialSize = populatedOptions.size;\r\n        this.lifetime = this.initialLifetime = populatedOptions.lifetime;\r\n        this.rotation = this.initialRotation = populatedOptions.rotation;\r\n        this.location = populatedOptions.location;\r\n        this.velocity = populatedOptions.velocity;\r\n        this.color = populatedOptions.color;\r\n        this.opacity = populatedOptions.opacity;\r\n    }\r\n    return Particle;\r\n}());\r\nexports.Particle = Particle;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emitter = void 0;\r\nvar vector_1 = require(\"../components/vector\");\r\nvar settings_1 = require(\"../settings\");\r\nvar variation_1 = require(\"../systems/variation\");\r\nvar config_1 = require(\"../util/config\");\r\nvar options_1 = require(\"./options\");\r\nvar particle_1 = require(\"./particle\");\r\n/**\r\n * Represents an emitter that is responsible for spawning and updating particles.\r\n *\r\n * Particles themselves are just data-holders, with the system acting upon them and\r\n * modifying them. The modifications are done mainly via modules, that use the\r\n * particle's data together with some function to apply temporal transitions.\r\n *\r\n * @see Particle\r\n * @see ParticleModifierModule\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    /**\r\n     * Creates a new emitter, using default options.\r\n     */\r\n    function Emitter(options) {\r\n        /**\r\n         * The particles currently contained within the system.\r\n         */\r\n        this.particles = [];\r\n        this.currentLoop = 0; // The current loop index.\r\n        this.durationTimer = 0; // Measures the current runtime duration, to allow loops to reset.\r\n        this.emissionTimer = 0; // Measures the current emission timer, to allow spawning particles in intervals.\r\n        this.attemptedBurstIndices = []; // The indices of the particle bursts that were attempted this loop.\r\n        this.options = config_1.overrideDefaults(options_1.getDefaultEmitterOptions(), options === null || options === void 0 ? void 0 : options.emitterOptions);\r\n        this.emission = config_1.overrideDefaults(options_1.getDefaultEmissionOptions(), options === null || options === void 0 ? void 0 : options.emissionOptions);\r\n        this.renderer = config_1.overrideDefaults(options_1.getDefaultRendererOptions(), options === null || options === void 0 ? void 0 : options.rendererOptions);\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"isExpired\", {\r\n        /**\r\n         * Checks if the emitter is already expired and can be removed.\r\n         * Expired emitters do not emit new particles.\r\n         */\r\n        get: function () {\r\n            return (this.options.loops >= 0 && this.currentLoop >= this.options.loops);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"canRemove\", {\r\n        /**\r\n         * Checks if the emitter can safely be removed.\r\n         * This is true if no more particles are active.\r\n         */\r\n        get: function () {\r\n            return this.particles.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears all particles inside the emitter.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Emitter.prototype.clearParticles = function () {\r\n        return this.particles.splice(0).length;\r\n    };\r\n    /**\r\n     * Processes a tick of the emitter, using the elapsed time.\r\n     *\r\n     * @remarks\r\n     * This handles a few things, namely:\r\n     * - Incrementing the duration timer and potentially incrementing the loop.\r\n     * - Handling particle bursts & emissions.\r\n     * - Despawning particles conditionally.\r\n     *\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tick = function (delta) {\r\n        if (!this.isExpired) {\r\n            this.durationTimer += delta;\r\n            if (this.durationTimer >= this.options.duration) {\r\n                this.currentLoop++;\r\n                // To start a new loop, the duration timer and attempted bursts are reset.\r\n                this.durationTimer = 0;\r\n                this.attemptedBurstIndices = [];\r\n            }\r\n            // We need to check the expiry again, in case the added loop or duration changed something.\r\n            if (!this.isExpired) {\r\n                // Iterate over the bursts, attempting to execute them if the time is ready.\r\n                var burstIndex = 0;\r\n                for (var _i = 0, _a = this.emission.bursts; _i < _a.length; _i++) {\r\n                    var burst = _a[_i];\r\n                    if (burst.time <= this.durationTimer) {\r\n                        // Has the burst already been attempted? If not ...\r\n                        if (!this.attemptedBurstIndices.includes(burstIndex)) {\r\n                            // Perform the burst, emitting a variable amount of particles.\r\n                            var count = variation_1.evaluateVariation(burst.count);\r\n                            for (var i = 0; i < count; i++) {\r\n                                this.emitParticle();\r\n                            }\r\n                            // Mark the burst as attempted.\r\n                            this.attemptedBurstIndices.push(burstIndex);\r\n                        }\r\n                    }\r\n                    burstIndex++;\r\n                }\r\n                // Handle the 'emission over time'. By using a while-loop instead of a simple\r\n                // if-condition, we take high deltas into account, and ensure that the correct\r\n                // number of particles will consistently be emitted.\r\n                this.emissionTimer += delta;\r\n                var delay = 1 / this.emission.rate;\r\n                while (this.emissionTimer > delay) {\r\n                    this.emissionTimer -= delay;\r\n                    this.emitParticle();\r\n                }\r\n            }\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var particle = this_1.particles[i];\r\n            this_1.tickParticle(particle, delta);\r\n            // Particles should be despawned (i.e. removed from the collection) if any of\r\n            // the despawning rules apply to them.\r\n            if (this_1.options.despawningRules.some(function (rule) { return rule(particle); })) {\r\n                this_1.particles.splice(i, 1);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = this.particles.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Performs an internal tick for the particle.\r\n     *\r\n     * @remarks\r\n     * This method controls the particle's lifetime, location and velocity, according\r\n     * to the elapsed delta and the configuration. Additionally, each of the emitter's\r\n     * modules is applied to the particle.\r\n     *\r\n     * @param particle The particle to apply the tick for.\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tickParticle = function (particle, delta) {\r\n        particle.lifetime -= delta;\r\n        if (this.options.useGravity) {\r\n            // Apply gravitational acceleration to the particle.\r\n            particle.velocity = particle.velocity.add(vector_1.Vector.up.scale(settings_1.settings.gravity * delta));\r\n        }\r\n        // Apply the particle's velocity to its location.\r\n        particle.location = particle.location.add(particle.velocity.scale(delta));\r\n        // Apply the modules to the particle.\r\n        for (var _i = 0, _a = this.options.modules; _i < _a.length; _i++) {\r\n            var moduleFunction = _a[_i];\r\n            moduleFunction(particle);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a particle using the registered settings.\r\n     * Also may despawn a particle if the maximum number of particles is exceeded.\r\n     */\r\n    Emitter.prototype.emitParticle = function () {\r\n        var particle = new particle_1.Particle({\r\n            location: this.emission.sourceSampler(),\r\n            lifetime: variation_1.evaluateVariation(this.emission.initialLifetime),\r\n            velocity: vector_1.Vector.from2dAngle(variation_1.evaluateVariation(this.emission.angle)).scale(variation_1.evaluateVariation(this.emission.initialSpeed)),\r\n            size: variation_1.evaluateVariation(this.emission.initialSize),\r\n            rotation: variation_1.evaluateVariation(this.emission.initialRotation),\r\n            color: variation_1.evaluateVariation(this.emission.initialColor),\r\n        });\r\n        this.particles.push(particle);\r\n        // Ensure that no more particles than 'maxParticles' can exist.\r\n        if (this.particles.length > this.options.maxParticles) {\r\n            this.particles.shift();\r\n        }\r\n        return particle;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\r\nvar variation_1 = require(\"./variation\");\r\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\r\nexports.resolvableShapes = {\r\n    square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\r\n    rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\r\n    circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\r\n    roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\",\r\n};\r\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\r\nfunction resolveShapeFactory(factory) {\r\n    // Retrieve the unresolved element from the factory.\r\n    var shape = variation_1.evaluateVariation(factory);\r\n    // If a string is returned, we need to resolve the element. This means\r\n    // looking up the string in the resolver lookup. If the key was not\r\n    // resolvable, we throw an error.\r\n    if (typeof shape === \"string\") {\r\n        var resolved = exports.resolvableShapes[shape];\r\n        if (!resolved) {\r\n            throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\r\n        }\r\n        // We're in luck, we can resolve the element! We create a dummy <div> element\r\n        // to set the innerHTML of, and return the first element child.\r\n        var dummy = document.createElement(\"div\");\r\n        dummy.innerHTML = resolved;\r\n        return dummy.firstElementChild;\r\n    }\r\n    return shape;\r\n}\r\nexports.resolveShapeFactory = resolveShapeFactory;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar __1 = require(\"..\");\r\nvar vector_1 = require(\"../components/vector\");\r\nvar containers_1 = require(\"../containers\");\r\nvar shapes_1 = require(\"../systems/shapes\");\r\nvar util_1 = require(\"../util\");\r\n/**\r\n * Represents a renderer used to draw particles to the DOM via HTML\r\n * elements. Additionally, it is responsible for purging the elements\r\n * of destroyed particles from the DOM.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        /**\r\n         * The lookup of elements currently handled by the renderer, with the\r\n         * particle ID as key and a HTMLElement as the value.\r\n         */\r\n        this.elements = new Map();\r\n        /**\r\n         * The normalized direction the light comes from.\r\n         */\r\n        this.light = new vector_1.Vector(0, 0, 1);\r\n        /**\r\n         * Whether or not the renderer should actually draw particles.\r\n         */\r\n        this.enabled = true;\r\n        // Respect that users might prefer reduced motion.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n        this.enabled =\r\n            !__1.settings.respectReducedMotion ||\r\n                !window.matchMedia(\"(prefers-reduced-motion)\").matches;\r\n    }\r\n    /**\r\n     * Begins a new render block. During the rendering phase, a list of rendered particles\r\n     * is tracked, so that stale particles can be removed later.\r\n     */\r\n    Renderer.prototype.begin = function () {\r\n        this.renderedParticles = [];\r\n    };\r\n    /**\r\n     * Terminates an existing render block. This checks which particles were rendered\r\n     * during the block and purges all unused HTMLElements from the DOM.\r\n     *\r\n     * @returns The amount of particles that were rendered.\r\n     */\r\n    Renderer.prototype.end = function () {\r\n        var it = this.elements.keys();\r\n        var result = it.next();\r\n        while (!result.done) {\r\n            var id = result.value;\r\n            if (!this.renderedParticles.includes(id)) {\r\n                this.elements.get(id).remove();\r\n                this.elements.delete(id);\r\n            }\r\n            result = it.next();\r\n        }\r\n        return this.renderedParticles.length;\r\n    };\r\n    /**\r\n     * Renders an individual particle to the DOM. If the particle is rendered for the first\r\n     * time, a HTMLElement will be created using the emitter's render settings.\r\n     *\r\n     * @param particle The particle to be rendered.\r\n     * @param emitter The system containing the particle.\r\n     */\r\n    Renderer.prototype.renderParticle = function (particle, emitter) {\r\n        if (!this.enabled)\r\n            return;\r\n        var options = emitter.renderer;\r\n        // Ensure that an element for the particle exists.\r\n        var element = this.elements.has(particle.id)\r\n            ? this.elements.get(particle.id)\r\n            : this.createParticleElement(particle, options);\r\n        if (options.applyColor) {\r\n            // If the options offer a coloring method, apply it.\r\n            options.applyColor(particle.color, element);\r\n        }\r\n        if (options.applyOpacity) {\r\n            // If the options offer an opacity modifying method, apply it.\r\n            options.applyOpacity(particle.opacity, element);\r\n        }\r\n        if (options.applyLighting) {\r\n            // If the options offer a lighting method, apply it.\r\n            // Lighting is calculated as a combination of the particle's normal\r\n            // direction and the lighting direction.\r\n            var normal = util_1.rotationToNormal(particle.rotation);\r\n            var lightingCoefficient = normal.dot(this.light);\r\n            options.applyLighting(lightingCoefficient, element);\r\n        }\r\n        if (options.applyTransform) {\r\n            // If the options offer a transformation method, apply it.\r\n            // This ensures the particle is rendered at the correct position with the correct rotation.\r\n            options.applyTransform(particle, element);\r\n        }\r\n        // Mark the particle as rendered.\r\n        this.renderedParticles.push(particle.id);\r\n    };\r\n    /**\r\n     * Creates the HTMLElement for a particle that does not have one already.\r\n     */\r\n    Renderer.prototype.createParticleElement = function (particle, options) {\r\n        // Resolve the element returned from the factory.\r\n        var resolved = shapes_1.resolveShapeFactory(options.shapeFactory);\r\n        // Clone the node to ensure we do not break existing elements.\r\n        var element = resolved.cloneNode(true);\r\n        // Ensure that the elements can be \"stacked\" ontop of eachother.\r\n        element.style.position = \"absolute\";\r\n        // Register the new element in the map, while appending the new element to the DOM.\r\n        this.elements.set(particle.id, containers_1.particleContainer.current.appendChild(element));\r\n        return element;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nvar debug_1 = require(\"./debug\");\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nvar renderer_1 = require(\"./particles/renderer\");\r\n/**\r\n * Represents a scene that contains emitters and their particles.\r\n *\r\n * Scenes are responsible for spawning and updating emitters, and\r\n * removing them once they are done.\r\n *\r\n * Scenes are not explicitely present in the DOM as an element, only\r\n * the contained particles are.\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new scene and starts the ticking job.\r\n     */\r\n    function Scene() {\r\n        /**\r\n         * The emitters currently present in the scene.\r\n         */\r\n        this.emitters = [];\r\n        /**\r\n         * The debug instance associated with the scene.\r\n         */\r\n        this.debug = new debug_1.Debug(this);\r\n        /**\r\n         * The renderer associated with the scene.\r\n         */\r\n        this.renderer = new renderer_1.Renderer();\r\n        /**\r\n         * The ID of the currently scheduled tick.\r\n         */\r\n        this.scheduledTickId = undefined;\r\n        /**\r\n         * The timestamp of the last tick, used to calculate deltas.\r\n         *\r\n         * @initialValue `performance.now()` (time origin)\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\r\n         */\r\n        this.lastTickTimestamp = performance.now();\r\n        // Ensure the scene context is preserved on the tick.\r\n        this.tick = this.tick.bind(this);\r\n        this.scheduleTick();\r\n    }\r\n    /**\r\n     * Creates and returns a new, default emitter object.\r\n     */\r\n    Scene.prototype.createEmitter = function (options) {\r\n        var emitter = new emitter_1.Emitter(options);\r\n        this.emitters.push(emitter);\r\n        return emitter;\r\n    };\r\n    /**\r\n     * Clears all emitters from the scene.\r\n     *\r\n     * @returns The number of cleared emitters.\r\n     */\r\n    Scene.prototype.clearEmitters = function () {\r\n        return this.emitters.splice(0).length;\r\n    };\r\n    /**\r\n     * Clears the particles from all emitters in the scene.\r\n     * Note that this does not remove the actual emitter objects though.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Scene.prototype.clearParticles = function () {\r\n        return this.emitters.reduce(function (sum, emitter) { return sum + emitter.clearParticles(); }, 0);\r\n    };\r\n    /**\r\n     * Schedules a tick in the scene.\r\n     */\r\n    Scene.prototype.scheduleTick = function () {\r\n        this.scheduledTickId = window.requestAnimationFrame(this.tick);\r\n    };\r\n    /**\r\n     * Cancels a pending tick operation.\r\n     */\r\n    Scene.prototype.cancelTick = function () {\r\n        window.cancelAnimationFrame(this.scheduledTickId);\r\n    };\r\n    /**\r\n     * Processes a tick cycle, updating all emitters contained in the scene.\r\n     * This is handled as a JS animation frame event, hence the passed timestamp.\r\n     *\r\n     * @remarks\r\n     * The emitter ticking and particle rendering is run using try-catch blocks,\r\n     * to ensure that we can recover from potential errors.\r\n     *\r\n     * @param timestamp The current timestamp of the animation frame.\r\n     */\r\n    Scene.prototype.tick = function (timestamp) {\r\n        // Calculate the elapsed delta and convert it to seconds.\r\n        var delta = (timestamp - this.lastTickTimestamp) / 1000;\r\n        try {\r\n            // Perform ticks for all the emitters in the scene.\r\n            for (var i = 0; i < this.emitters.length; i++) {\r\n                var emitter = this.emitters[i];\r\n                emitter.tick(delta);\r\n                if (emitter.isExpired && emitter.canRemove) {\r\n                    this.emitters.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while updating the scene's emitters:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        try {\r\n            // Instruct the renderer to draw the particles of all systems.\r\n            this.renderer.begin();\r\n            for (var _i = 0, _a = this.emitters; _i < _a.length; _i++) {\r\n                var emitter = _a[_i];\r\n                for (var _b = 0, _c = emitter.particles; _b < _c.length; _b++) {\r\n                    var particle = _c[_b];\r\n                    this.renderer.renderParticle(particle, emitter);\r\n                }\r\n            }\r\n            this.renderer.end();\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while rendering the scene's particles:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        // Perform a tick on the debug interface\r\n        this.debug.tick(delta);\r\n        // Save the timestamp as the last tick timestamp and schedule a new tick.\r\n        this.lastTickTimestamp = timestamp;\r\n        this.scheduleTick();\r\n    };\r\n    return Scene;\r\n}());\r\nexports.Scene = Scene;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModuleBuilder = void 0;\r\nvar components_1 = require(\"../components\");\r\n/**\r\n * Represents a builder for particle modules. Returns an evaluatable module\r\n * function, that can be consumed by emitters.\r\n *\r\n * @remarks\r\n * Not all properties can be driven. TypeScript will validate this at compile time,\r\n * but no internal validation is performed due to performance reasons. Also, note\r\n * that the driving factor is \"lifetime\" by default.\r\n *\r\n * @example\r\n * ```ts\r\n * new ModuleBuilder()\r\n *     .drive(\"size\")\r\n *     .by((t) => t * 2)\r\n *     .through(\"lifetime\")\r\n *     .build();\r\n * ```\r\n */\r\nvar ModuleBuilder = /** @class */ (function () {\r\n    function ModuleBuilder() {\r\n        /**\r\n         * The factor driving the built function.\r\n         *\r\n         * @defaultValue \"lifetime\"\r\n         */\r\n        this.factor = \"lifetime\";\r\n        this.isRelative = false;\r\n    }\r\n    /**\r\n     * Specifies the key in the particle that should be driven.\r\n     *\r\n     * @remarks\r\n     * Note that not all of a particle's properties are drivable through modules. If you\r\n     * need full control of a particle inside of a module, you can use a module function directly.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.drive = function (key) {\r\n        this.driverKey = key;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the factor to drive the evaluated value by. Supports \"lifetime\" and \"size\".\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.through = function (factor) {\r\n        this.factor = factor;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the value to drive the module behaviour by. This can be a constant,\r\n     * a spline or an evaluable function. Note that in the last case, the driving\r\n     * factor is passed as a parameter.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.by = function (driver) {\r\n        this.driverValue = driver;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies that the module function is supposed to act relative to the\r\n     * properties initial value.\r\n     *\r\n     * @remarks\r\n     * Note that this is only possible if an \"initial*\" property exists on the\r\n     * particle object. The operation applied to the initial and new value\r\n     * is dependant on their type:\r\n     * - `Vector`: Both vectors are added.\r\n     * - `number`: Both numbers are multiplied.\r\n     *\r\n     * For more advanced relative customizations, consider using the particle\r\n     * object in the driver value function instead, like:\r\n     * ```ts\r\n     * .by((t, p) => p.initialSize + t * 2);\r\n     * ```\r\n     */\r\n    ModuleBuilder.prototype.relative = function (isRelative) {\r\n        if (isRelative === void 0) { isRelative = true; }\r\n        this.isRelative = isRelative;\r\n        return this;\r\n    };\r\n    /**\r\n     * Consumes the builder and returns an evaluatable module function.\r\n     *\r\n     * @remarks\r\n     * Note that you need to specify the driving key and value, otherwise an error\r\n     * will be thrown.\r\n     */\r\n    ModuleBuilder.prototype.build = function () {\r\n        var _this = this;\r\n        if (typeof this.driverKey === \"undefined\") {\r\n            throw new Error(\"No driving key was provided in the module builder. Did you forget a '.drive()' call?\");\r\n        }\r\n        if (typeof this.driverValue === \"undefined\") {\r\n            throw new Error(\"No driving value was provided in the module builder. Did you forget a '.through()' call?\");\r\n        }\r\n        return function (particle) {\r\n            updateDrivenProperty(particle, _this.driverKey, evaluateModuleDriver(_this.driverValue, calculateModuleFactor(_this.factor, particle), particle), _this.isRelative);\r\n        };\r\n    };\r\n    return ModuleBuilder;\r\n}());\r\nexports.ModuleBuilder = ModuleBuilder;\r\n/**\r\n * Evaluates the module driver using a specified factor.\r\n */\r\nfunction evaluateModuleDriver(driver, factor, particle) {\r\n    if (typeof driver === \"object\" && \"evaluate\" in driver) {\r\n        return driver.evaluate(factor);\r\n    }\r\n    if (typeof driver === \"function\") {\r\n        return driver(factor, particle);\r\n    }\r\n    return driver;\r\n}\r\n/**\r\n * Calculates a module factor using a specified particle as context.\r\n */\r\nfunction calculateModuleFactor(factor, particle) {\r\n    switch (factor) {\r\n        case \"lifetime\":\r\n            return particle.initialLifetime - particle.lifetime;\r\n        case \"relativeLifetime\":\r\n            return ((particle.initialLifetime - particle.lifetime) /\r\n                particle.initialLifetime);\r\n        case \"size\":\r\n            return particle.size;\r\n        default:\r\n            throw new Error(\"Invalid driving factor '\" + factor + \"'.\");\r\n    }\r\n}\r\n/**\r\n * Updates a driven property of a particle using the specified value.\r\n *\r\n * @remarks\r\n * If the operation is marked as relative, the function infers the new value\r\n * through the value's type. Note that relative properties must have a\r\n * corresponding \"initial*\" value in the particle's properties.\r\n */\r\nfunction updateDrivenProperty(particle, key, value, relative) {\r\n    if (relative === void 0) { relative = false; }\r\n    if (!relative) {\r\n        particle[key] = value;\r\n    }\r\n    else {\r\n        var initial = particle[\"initial\" + key[0].toUpperCase() + key.substr(1)];\r\n        if (typeof initial === \"undefined\") {\r\n            throw new Error(\"Unable to use relative chaining with key '\" + key + \"'; no initial value exists.\");\r\n        }\r\n        if (value instanceof components_1.Vector) {\r\n            updateDrivenProperty(particle, key, initial.add(value));\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            updateDrivenProperty(particle, key, initial * value);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to use relative chaining with particle key '\" + key + \"'; no relative operation for '\" + value + \"' could be inferred.\");\r\n        }\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.confetti = void 0;\r\nvar __1 = require(\"../\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction confetti(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        count: variation.range(20, 40),\r\n        spread: variation.range(35, 45),\r\n        speed: variation.range(300, 600),\r\n        size: variation.skew(1, 0.2),\r\n        rotation: function () { return random.randomUnitVector().scale(180); },\r\n        color: function () { return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(function (t) { return Math.min(1, t * 3); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(140, 200, 260).scale(t); })\r\n                .relative()\r\n                .build(),\r\n        ],\r\n        shapes: [\"square\", \"circle\"],\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 8,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\r\n            initialLifetime: 8,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.confetti = confetti;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sparkles = void 0;\r\nvar __1 = require(\"..\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard sparkles template.\r\n *\r\n * @param source The source to emit the sparkles from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction sparkles(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        lifetime: variation.range(1, 2),\r\n        count: variation.range(10, 20),\r\n        speed: variation.range(100, 200),\r\n        size: variation.range(0.8, 1.8),\r\n        rotation: function () { return new components_1.Vector(0, 0, random.randomRange(0, 360)); },\r\n        color: function () { return components_1.Color.fromHsl(50, 100, random.randomRange(55, 85)); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(0, 0, 200).scale(t); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 0 }, { time: 0.3, value: 1 }, { time: 0.7, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"opacity\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 1 }, { time: 0.5, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .build(),\r\n        ],\r\n        shapes: \"star\",\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 3,\r\n            useGravity: false,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.range(0, 360),\r\n            initialLifetime: populated.lifetime,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            applyLighting: undefined,\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.sparkles = sparkles;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./confetti\"), exports);\r\n__exportStar(require(\"./sparkles\"), exports);\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = exports.forceInit = exports.util = exports.math = exports.random = exports.sources = exports.variation = exports.Emitter = exports.Particle = exports.settings = exports.scene = void 0;\r\nvar scene_1 = require(\"./scene\");\r\nvar util_1 = require(\"./util\");\r\n__exportStar(require(\"./components\"), exports);\r\n__exportStar(require(\"./templates\"), exports);\r\n__exportStar(require(\"./systems/shapes\"), exports);\r\n__exportStar(require(\"./systems/modules\"), exports);\r\n// Create the lazy-initializing scene.\r\nexports.scene = new util_1.Lazy(function () {\r\n    // The library requires the use of the DOM, hence it cannot run in non-browser environments.\r\n    if (typeof document === \"undefined\" || typeof window === \"undefined\") {\r\n        throw new Error(\"It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.\");\r\n    }\r\n    return new scene_1.Scene();\r\n});\r\nvar settings_1 = require(\"./settings\");\r\nObject.defineProperty(exports, \"settings\", { enumerable: true, get: function () { return settings_1.settings; } });\r\nvar particle_1 = require(\"./particles/particle\");\r\nObject.defineProperty(exports, \"Particle\", { enumerable: true, get: function () { return particle_1.Particle; } });\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return emitter_1.Emitter; } });\r\nexports.variation = require(\"./systems/variation\");\r\nexports.sources = require(\"./systems/sources\");\r\nexports.random = require(\"./systems/random\");\r\nexports.math = require(\"./systems/math\");\r\nexports.util = require(\"./util\");\r\n/**\r\n * Forces the initialization of the otherwise lazy scene.\r\n */\r\nfunction forceInit() {\r\n    exports.scene.current;\r\n}\r\nexports.forceInit = forceInit;\r\nexports.default = require(\"./\");\r\n", "import party from \"party-js\";\n\nconsole.log(\"Hello World!\")\nconsole.log(typeof(party))\nfrappe.party=party\n\n// document.querySelector(\".button\").addEventListener(\"click\", function (e) {\n// \tparty.confetti(this);\n// });\n\n\n\n// frappe.ready(function () {\n//     document.querySelector(\".button\").addEventListener(\"click\", function (e) {\n//         party.confetti(this);\n//     });\n\n// })\n\n"],
  "mappings": "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",
  "names": []
}
